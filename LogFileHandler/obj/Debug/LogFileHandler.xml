<?xml version="1.0"?>
<doc>
<assembly>
<name>
LogFileHandler
</name>
</assembly>
<members>
<member name="T:LogFileHandler.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:LogFileHandler.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:LogFileHandler.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="T:LogFileHandler.LogFileHandler">
 <summary>
 Library for a Log File Handler
 </summary>
</member>
<member name="M:LogFileHandler.LogFileHandler.#ctor(System.String)">
 <summary>
 LogFileHandler requires a file name to be instantiated. 
 </summary>
 <param name="fileName">String</param>
</member>
<member name="M:LogFileHandler.LogFileHandler.WriteToLog(System.String,System.String)">
 <summary>
 Calls the appropriate subroutine that will handle the interface for the file type.
 </summary>
 <param name="textualKey">String</param>
 <param name="loggedMessage">String</param>
</member>
<member name="M:LogFileHandler.LogFileHandler.IsValidFileName(System.String)">
 <summary>
 Validates the characters in the string passed in and returns true if they string contains characters
 that can be used as a filename.
 </summary>
 <param name="nameTest">String</param>
 <returns>Boolean</returns>
</member>
<member name="M:LogFileHandler.LogFileHandler.WriteToTextFile(System.String)">
 <summary>
 Function to create a new file and add the passed in string to it or 
 to append the string to the file if it allready exists. Returns error
 message if generated.
 </summary>
 <param name="outputString">String</param>
</member>
</members>
</doc>
